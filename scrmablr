package spacex;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class PacketDescrambler {

	public static void main(String[] args) {
		int n = 3;
		   int[] seq = { 1, 1, 2, 2, 2, 0, 0, 0 };
		char[] frag = { '+', 
				 '+', 
				 'A', 
				 'A', 
				 'B', 
				 '#', 
				 '#', 
				 '#'};
		System.out.println("ANSWER is " + packetDescrambler(seq, frag, n));

	}

	static String packetDescrambler(int[] seq, char[] fragmentData, int n) {

		Map<Integer, List<Character>> map = new HashMap<>();
		for (int i = 0; i < seq.length; i++) {
			int num = seq[i];
			char ch = fragmentData[i];
			if(num>=n) return "";
			if(map.containsKey(num)){
				map.get(num).add(ch);
			} else {
				List<Character> l = new ArrayList<>();
				l.add(ch);
				map.put(num,l);
			}
		}
		System.out.println(map);
		
		int halfN = n%2 ==0 ? n/2: n/2 +1;
		char[] answer = new char[n];
		for (int i = 0; i<n; i++) {
			List<Character> list= map.get(i);
			if(list == null) return "";
			System.out.println("list for " + i + " is " + list);
			Character maxChar = findMaxChar(list, halfN);
			System.out.println(i + " " + maxChar);
			if(maxChar == null) return "";
			
			if(i<n-1 && maxChar.equals('#'))
				return "";
			
			if(i==n-1 && !maxChar.equals('#'))
				return "";
			
			
			answer[i]  = maxChar;
		}
		
		return new String(answer);
	}

	
	static Character findMaxChar(List<Character> list, int half) {
		System.out.println("HALF is " + half);
		int maxFreq = 0;
		Character ch = null;
		Set<Character> set  = new HashSet<>(list);
		for (Character c: set) {
			int f = Collections.frequency(list, c);
			if(f>maxFreq){
				maxFreq = f;
				ch = c;
			}
		}
		System.out.println("max freq is " + maxFreq + " with ch as " + ch);
		
		if(maxFreq>=half) {
			return ch;
		} else {
			return null;
		}

	}
}
